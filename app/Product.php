<?php

namespace App;

/*___________________________________________________
Это МОДЕЛЬ. Ее назначение в laravel это связь с БД.
Каждая модель связана со своей таблицей в БД. Название 
модели это как правило название таблицы в единственном числе.

Мы будем связывать наши модели с контроллерами чарез комманду use App/Category  в контроллере с которым захотим связать эту модель. Это необходимо для того чтоб через контроллер выводить что то из нашей таблицы этой модели на страницу с которой он связан!!!!

Все что касается моделей искать на сайте laravel/Eloquent ORM*/

//Этот класс (МОДЕЛЬ )была создан в консоле коммандой php artisan make:model Category.
    // этот класс(млдель) будет связываться с таблицей categories в БД.

use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    public function category()//название этой ф-ции становится автоматически свойством нашей модели Product

    {
        /*Для того чтоб понять что мы тут сделали читать на сайте laravel/Eloquent ORM/Relationships (отношения)*/

    	return $this->belongsTo('App\Category');
        /*Тут мы сделали связь с моделью Category для доступа к файлам таблицы categories в БД.
        products.category_id = categories.id и теперь написав в представлении $produts->category, где category это название этой ф-ции мы получаем доступ к таблице и ее столбцам.*/

        /*Мы не указывали в каком столбце у нас есть связь с другой таблицей return $this->belongsTo('App\Category', 'category_id'); вот так.

        Но если правильно назвать ф-цию (так же как и модель с которой нужна связь) все сработает*/

        /*Проще говоря указали именно эту связь так как каждый продукт имеет отношение только к одной конкретной категории!!!*/
    }

    public function scopeRecommended($query)
    {
        return $query->where('recommended', 1);
    }

    public function scopeWithImage($query)
    {
        return $query->whereNotNull('img');
    }
    public function setSlugAttribute($value)
    /*Эта ф-ция сеттер(она относится к аксеторам). Она будет вызываться в момент сохранения данных которые приходят с формы(создания категорий), проверять их и транслетелировать.

    Чтоб все работало автоматом, мы обязанны называть ф-цию именно так где Slug это название столбца таблицы

    В $value будут попадать данные которые приходят из формы*/
    {
        if(!$value) {
            $this->attributes['slug'] = \Str::slug($this->attributes['name'], '-');
        }
        /*Если в $value приходит ничего то есть пользователь ничего не ввел,
        тогда в массив attributes с ключем ['slug'] записуем то что находится в ['name'](в проверки валидации мы указывали что он обязательный к заполнению).

        Метод \Str::slug():
        В первом параметре говорит что мы будем преобразовывать.
        во втором говорит чем заменить пробелы

        Про этот метод можно прочитать на сайте laravel/deeping deeper/helpers*/
        else {
            $this->attributes['slug'] = \Str::slug($value, '-');
        } /*если же все таки пользователь ввел что то то мы берем в первом параметре то что прийдет из формы.

        На сайте laravel/eloqument OLM/muttators можно прочитать как создавать эти ф-ции(свои мутаторы)*/



        
    }
}
